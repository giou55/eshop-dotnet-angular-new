Σε αυτό το project χρησιμοποιούμε:
.NET Core 7
Entity Framework
Identity
Postgres
Redis
Stripe

-----------------------------------------------------------------------

Έχουμε δύο βάσεις:
store και identity

Και έχουμε δύο φακέλους Migrations:
Infrastructure/Data/Migrations
Infrastructure/Identity/Migrations

------------------------------------------------------------------------

Έχουμε τρία αρχεία .csproj:
API/API.csproj
Infrastructure/Infrastructure.csproj
Core/Core.csproj

-----------------------------------------------------------------------

Τα στατικά αρχεία της Angular, αφού κάνουμε ng build,
φτιάχνονται και μπαίνουν μέσα στον φάκελο API/wwwroot

Μετά μπορούμε να πάμε localhost:5001
και να δούμε την εφαρμογή μας να χρησιμοποιεί
αυτήν την φορά τα στατικά αρχεία js και index.html
που υπάρχουν μέσα στον φάκελο wwwroot

----------------------------------------------------------------------

Για να φτιαχτούν τα δύο migrations για την SQLite:
dotnet ef migrations add "Sqlite initial" -p Infrastructure -s API -c StoreContext -o Data/Migrations
dotnet ef migrations add "Sqlite initial" -p Infrastructure -s API -c AppIdentityDbContext -o Identity/Migrations

Για να φτιαχτούν τα δύο migrations για την Postgres:
dotnet ef migrations add "Postgres initial" -p Infrastructure -s API -c StoreContext -o Data/Migrations
dotnet ef migrations add "Postgres initial" -p Infrastructure -s API -c AppIdentityDbContext -o Identity/Migrations

Οι παραπάνω εντολές να τρέξουν από τον root φάκελο του project.

----------------------------------------------------------------------------------------------------------

Αφού τρέξουμε το Docker Desktop,
πάμε στον root φάκελο και γράφουμε:
docker-compose up -d
για να τρέξουν τα τρία containers.

Μετά μπορούμε να φτιάξουμε τις δύο βάσεις:
dotnet ef database update --context StoreContext
dotnet ef database update --context AppIdentityDbContext
(Οι παραπάνω εντολές να τρέξουν από τον API φάκελο)

Προηγουμένως ίσως χρειάζεται να διαγράψουμε τις δύο βάσεις:
dotnet ef database drop -s API -p Infrastructure -c StoreContext
dotnet ef database drop -s API -p Infrastructure -c AppIdentityDbContext
(Οι παραπάνω εντολές να τρέξουν από τον root φάκελο)

-------------------------------------------------------------------------------------------------------

Μετά πάμε στον φάκελο API και γράφουμε:
dotnet run
και τρέχει η εφαρμογή μας.
(Αν οι βάσεις δεν υπάρχουν, θα φτιαχτούν, και θα γίνουν seed τα δεδομένα)

--------------------------------------------------------------------------------------------------------

email: bob@test.com
password: Pa$$w0rd

password for root user: qA35!e5W23a
ip address: 64.226.65.221

----------------------------------------------------------------------------------------------------

Για να τεστάρουμε την πληρωμή στο Stripe βάζουμε card number: 4242 4242 4242 4242

----------------------------------------------------------------------------------------------------

Το image που επέλεξα για το droplet στον Digital Ocean server:
Docker 20.10.21OS
Ubuntu 22.04

---------------------------------------------------------------------------------------------------

